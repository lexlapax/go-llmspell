// ABOUTME: Core script engine interface for executing LLM spells
// ABOUTME: Defines the common interface that all script engines must implement

package engine

import (
	"context"
	"io"
)

// Engine defines the interface for script execution engines
type Engine interface {
	// Name returns the name of the engine (e.g., "lua", "js", "tengo")
	Name() string

	// LoadScript loads a script from a reader
	LoadScript(reader io.Reader) error

	// LoadScriptFile loads a script from a file path
	LoadScriptFile(path string) error

	// Execute runs the loaded script
	Execute(ctx context.Context) error

	// RegisterFunction registers a Go function to be callable from scripts
	RegisterFunction(name string, fn interface{}) error

	// SetVariable sets a variable in the script context
	SetVariable(name string, value interface{}) error

	// GetVariable gets a variable from the script context
	GetVariable(name string) (interface{}, error)
}

// Config contains configuration options for script engines
type Config struct {
	// MaxExecutionTime limits how long a script can run
	MaxExecutionTime int64
	
	// MaxMemory limits memory usage (if supported by engine)
	MaxMemory int64
	
	// EnableDebug enables debug output
	EnableDebug bool
}

// Result represents the result of script execution
type Result struct {
	// Output contains any output generated by the script
	Output string
	
	// Error contains any error that occurred during execution
	Error error
	
	// Variables contains the final state of script variables
	Variables map[string]interface{}
}